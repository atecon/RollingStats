clear
set verbose off

include RollingStats.gfn
open denmark.gdt -q		# load some time-series dataset

RUN_EXAMPLE = 1

if RUN_EXAMPLE == 1             # moving_stats-window case
    series input = diff(LRM)
    smpl input --contiguous     # avoid missing values

    scalar WSIZE = 22           # set window length
    series y = movstats(input, "mean", WSIZE)
    print input y -o

elif RUN_EXAMPLE == 2  # moving_stats-window case
    series input = diff(LRM)
    smpl input --contiguous    # avoid missing values

    scalar WSIZE = 22                # set window length
    bundle B = moving_stats(input, "mean", WSIZE)
    print B

    # Vector to series
    smpl B.obsnum[1] B.obsnum[end]  # select relevant sample
    series y = B.result
    print input y -o

elif RUN_EXAMPLE == 2  # expanding window
    series input = diff(LRM)
    smpl input --contiguous    # avoid missing values

    scalar EXPANDING = TRUE
    scalar WSIZE = 5                # set window length
    bundle B = moving_stats(input, "mean", WSIZE, EXPANDING)
    print B

    # Vector to series
    smpl B.obsnum[1] B.obsnum[end]  # select relevant sample
    series y = B.result
    print input y -o

elif RUN_EXAMPLE == 3
    # Call your own user-defined function which returns a scalar value
    # of the AR(1)-coefficient over time (w.o. intercept in the regression)
    function scalar my_AR1 (const series y)
        ols y const y(-1) --quiet
        return $coeff[2]	# return AR(1) coefficient only
    end function

    scalar EXPANDING = TRUE
    scalar WSIZE = 10                # set window length
    bundle B = moving_stats(LRM, "my_AR1", WSIZE, EXPANDING)

    # Vector to series
    smpl B.obsnum[1] B.obsnum[end]  # select relevant sample
    series bhat = B.result
    gnuplot bhat --with-lines --time-series --output=display

elif RUN_EXAMPLE == 4
    # Call your own user-defined function which returns a matrix
    # of coefficients over time
    function matrix my_AR1 (const series y)
        ols y const y(-1) --quiet
        return $coeff
    end function

    scalar EXPANDING = TRUE
    scalar WSIZE = 10                # set window length
    bundle B = moving_stats(LRM, "my_AR1", WSIZE, EXPANDING)

    # Vector to series
    smpl B.obsnum[1] B.obsnum[end]  # select relevant sample
    series bconst = B.result[,1]
    series bar1 = B.result[,2]
    gnuplot bconst bar1 --with-lines --time-series --output=display
endif
