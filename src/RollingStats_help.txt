This package is for computing statistics in a moving-window manner. Currently
only time-series datasets are supported.

Please ask questions and report bugs on the gretl mailing list if possible.
Alternatively, create an issue ticket on the github repo (see below).
Source code and test script(s) can be found here:
https://github.com/atecon/RollingStats


Public functions
=================

rolling (const series y, const string operation, int wsize[1::2],
				 bool expanding[FALSE])
-------------------------------------------------------------------
This function computes some requested statistics in either a 'rolling'
(fixed, shifting window through time) or expanding window through time manner.

Input:
------
y:             			series, Target for which to compute statistics
operation:				  string, Name of the function to call
wsize:              int, Length of the window (optional, default = 2)
expanding:          bool, 0(=FALSE): rolling-window (default),
										1 (=TRUE): expanding window

Return:
Bundle holding the following objects:
  result:		Either a matrix or a matrix array. Both are of length R where R
  					refers to the number of windows. The returned matrix may have k
  					columns if the the requested operation returns a vector of length
  					k.
  obsnum:		Column vector holding the observation identifiers for each window
  					considered. Each value refers to the last observation used for
  					computation.
  date:			String array holding the observation label for each window
  					considered. Each value refers to the last observation date used for
  					computation.


Changelog
==========
1.0: February 2023
+ Completely new user-interface
+ Only single series can be passed to the main function
+ Internal refactoring

0.9: April 2021
+ Changed user-interface
    - Replace rolling_ts() function by the new functions moving_stats()
      and moving_stats_array(), respectively.
    - Remove first unnecessary argument of rvec2series() function.
    - Internal improvements

0.2: Jan., 2019
+ Work on rolling_ts():
	- 'y' can be a list of series now
	- the output matrix can be a matrix of size R by n
	instead of R by 1
	- the user may provide a matrix array in pointer form
	for storing multiple matrices returned by some
	user-defined function
	+ update the sample script and manual script accordingly

0.1: Nov., 2018
+ initial public version
